{"version":3,"sources":["services/Api.js","components/Header.js","components/Footer.js","components/Filter.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","sort","a","b","name","localeCompare","map","character","episodes","episode","length","id","toString","image","origin","species","status","Header","className","Footer","Filter","props","type","placeholder","onChange","ev","preventDefault","handleChangeInput","value","target","nameFilter","CharacterCard","to","src","alt","CharacterList","characterStore","key","CharacterDetail","aria-hidden","isAlive","aria-label","renderStatus","isHuman","renderSpecies","App","useState","setCharacterStore","setNameFilter","useEffect","exact","path","filter","toUpperCase","includes","render","routeCharacterId","match","params","characterId","find","ReactDOM","document","getElementById"],"mappings":"qVA0BeA,EAzBQ,WAErB,OAAOC,MADU,8CAEdC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OACEA,EAAKC,QAEFC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SAEtCE,KAAI,SAACC,GACJ,MAAO,CACLC,SAAUD,EAAUE,QAAQC,OAC5BC,GAAIJ,EAAUI,GAAGC,WACjBC,MAAON,EAAUM,MACjBT,KAAMG,EAAUH,KAChBU,OAAQP,EAAUO,OAAOV,KACzBW,QAASR,EAAUQ,QACnBC,OAAQT,EAAUS,eCRjBC,G,MARA,WACb,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,oBCWNC,G,MAbA,WACb,OACE,4BAAQD,UAAU,UAChB,0CACY,8CADZ,aAEE,8CAFF,aAE2B,8CAF3B,aAGE,8CAHF,aAKA,yBAAKA,UAAU,gBAAf,0CCmBSE,G,MA3BA,SAACC,GAQd,OACE,6BAASH,UAAU,UACjB,8BACE,2BACEI,KAAK,OACLC,YAAY,iCACZL,UAAU,gBACVM,SAduB,SAACC,GAC9BA,EAAGC,iBACHL,EAAMM,kBAAkB,CAEtBC,MAAOH,EAAGI,OAAOD,SAWbA,MAAOP,EAAMS,iBCSRC,G,MAzBO,SAACV,GAMrB,OACE,kBAAC,IAAD,CAAMW,GAAE,qBAAgBX,EAAMV,KAC5B,6BAASO,UAAU,QACjB,6BACE,yBACEA,UAAU,cACVe,IAAKZ,EAAMR,MACXqB,IAAG,kBAAab,EAAMjB,SAG1B,yBAAKc,UAAU,cACb,4BAAKG,EAAMjB,OAEb,yBAAKc,UAAU,iBAjBe,UAAlBG,EAAMN,QAAsB,eAAO,oBCiCxCoB,G,MAlCO,SAACd,GA0BrB,OAAO,6BAASH,UAAU,aAvBY,IAAhCG,EAAMe,eAAe1B,OAErB,yBAAKQ,UAAU,iBACb,6FAA4DG,EAAMS,WAAlE,OAIGT,EAAMe,eAAe9B,KAAI,SAACC,GAC/B,OACE,kBAAC,EAAD,CACE8B,IAAK9B,EAAUI,GACfA,GAAIJ,EAAUI,GACdE,MAAON,EAAUM,MACjBL,SAAUD,EAAUC,SACpBJ,KAAMG,EAAUH,KAChBW,QAASR,EAAUQ,QACnBC,OAAQT,EAAUS,OAClBF,OAAQP,EAAUO,eCoCfwB,G,MAzDS,SAACjB,GAevB,OACE,6BAASH,UAAU,SACjB,6BAASA,UAAU,kBACjB,yBAAKA,UAAU,yBACb,4BAAKG,EAAMjB,OAEb,kBAAC,IAAD,CAAM4B,GAAG,KACP,0BAAMd,UAAU,wBACd,uBAAGA,UAAU,qBAAqBqB,cAAY,WAIlD,yBAAKrB,UAAU,wBACb,yBAAKA,UAAU,+BACb,yBAAKe,IAAKZ,EAAMR,MAAOqB,IAAG,kBAAab,EAAMjB,SAE/C,yBAAKc,UAAU,oCACb,4BACE,4BACE,0CAjCO,WACnB,GAAqB,YAAjBG,EAAML,OAAsB,CAC9B,IAAMwB,EAA2B,UAAjBnB,EAAML,OAAqB,eAAO,eAClD,OAAO,0BAAMyB,aAAW,iBAAiBD,GAEzC,OAAO,8BAAOnB,EAAML,QA6BT0B,IAEH,4BACE,2CA5BQ,WACpB,IAAMC,EAA4B,UAAlBtB,EAAMN,QAAsB,eAAO,eACnD,OAAO,0BAAM0B,aAAW,kBAAkBE,GA2B7BC,IAEH,4BACE,0CACCvB,EAAMP,QAET,4BACE,sDACCO,EAAMb,iBCoCRqC,G,MA5EH,WAAM,MAE4BC,mBAAS,IAFrC,mBAETV,EAFS,KAEOW,EAFP,OAGoBD,mBAAS,IAH7B,mBAGThB,EAHS,KAGGkB,EAHH,KAMhBC,qBAAU,WACRvD,IAAiBE,MAAK,SAACG,GACrBgD,EAAkBhD,QAEnB,CAAC+B,IAwCJ,OACE,yBAAKZ,UAAU,OACb,kBAAC,EAAD,MACA,0BAAMA,UAAU,QACd,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACExB,kBA3CgB,SAACN,GACzB2B,EAAc3B,EAAMO,QA2CZE,WAAYA,IAEd,kBAAC,EAAD,CACEM,eAzCDA,EAAegB,QAAO,SAAC7C,GAC5B,OAAOA,EAAUH,KAAKiD,cAAcC,SAASxB,EAAWuB,kBAyClDvB,WAAYA,KAGhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqB,KAAK,0BACLI,OA3CoB,SAAClC,GAC7B,IAAMmC,EAAmBnC,EAAMoC,MAAMC,OAAOC,YACtCpD,EAAY6B,EAAewB,MAC/B,SAACrD,GAAD,OAAeA,EAAUI,KAAO6C,KAElC,OAAIjD,EAEA,kBAAC,EAAD,CACEH,KAAMG,EAAUH,KAChBY,OAAQT,EAAUS,OAClBD,QAASR,EAAUQ,QACnBD,OAAQP,EAAUO,OAClBN,SAAUD,EAAUC,SACpBK,MAAON,EAAUM,MACjBF,GAAIJ,EAAUI,KAKhB,yBAAKO,UAAU,iBACb,4DA2BJ,kBAAC,EAAD,SC7EN2C,IAASN,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.92b0615d.chunk.js","sourcesContent":["// get data and return in alphabetical order sorted by name\r\nconst getDataFromApi = () => {\r\n  const ENDPOINT = \"https://rickandmortyapi.com/api/character/\";\r\n  return fetch(ENDPOINT)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return (\r\n        data.results\r\n          // sort data by name\r\n          .sort((a, b) => a.name.localeCompare(b.name))\r\n          // set data attributes I will use and the type of data\r\n          .map((character) => {\r\n            return {\r\n              episodes: character.episode.length,\r\n              id: character.id.toString(),\r\n              image: character.image,\r\n              name: character.name,\r\n              origin: character.origin.name,\r\n              species: character.species,\r\n              status: character.status,\r\n            };\r\n          })\r\n      );\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\"></div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from \"react\";\r\nimport \"../stylesheets/Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div>\r\n        Leyenda : <span>👽</span> = \"Alien\"\r\n        <span>👤</span>= \"Human\" <span>👍</span> = \"Alive\"\r\n        <span>👎</span> = \"Dead\"\r\n      </div>\r\n      <div className=\"footer__logo\">&#169; 2020 Creado por Andrea Clavijo</div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/Filter.scss\";\r\n\r\nconst Filter = (props) => {\r\n  const handleChangeInputChild = (ev) => {\r\n    ev.preventDefault();\r\n    props.handleChangeInput({\r\n      // input value go up through lifting to handler mother as props.value\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"filter\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Busca tu personaje favorito...\"\r\n          className=\"filter__input\"\r\n          onChange={handleChangeInputChild}\r\n          value={props.nameFilter}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  nameFilter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/CharacterCard.scss\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const renderSpecies = () => {\r\n    const isHuman = props.species === \"Human\" ? \"👤\" : \"👽\";\r\n    return isHuman;\r\n  };\r\n\r\n  return (\r\n    <Link to={`/character/${props.id}`}>\r\n      <article className=\"card\">\r\n        <div>\r\n          <img\r\n            className=\"card__image\"\r\n            src={props.image}\r\n            alt={`Foto de ${props.name}`}\r\n          ></img>\r\n        </div>\r\n        <div className=\"card__name\">\r\n          <h3>{props.name}</h3>\r\n        </div>\r\n        <div className=\"card__species\">{renderSpecies()}</div>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../stylesheets/CharacterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const renderCharacterCard = () => {\r\n    // error message if characterStore is empty\r\n    if (props.characterStore.length === 0) {\r\n      return (\r\n        <div className=\"error-message\">\r\n          <p>{`No hay ningún personaje que coincida con la palabra \"${props.nameFilter}\"`}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return props.characterStore.map((character) => {\r\n        return (\r\n          <CharacterCard\r\n            key={character.id}\r\n            id={character.id}\r\n            image={character.image}\r\n            episodes={character.episodes}\r\n            name={character.name}\r\n            species={character.species}\r\n            status={character.status}\r\n            origin={character.origin}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  };\r\n  return <section className=\"card-list\">{renderCharacterCard()}</section>;\r\n};\r\n\r\nCharacterList.propTypes = {\r\n  nameFilter: PropTypes.string,\r\n  characterStore: PropTypes.array,\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/CharacterDetail.scss\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const renderStatus = () => {\r\n    if (props.status !== \"unknown\") {\r\n      const isAlive = props.status === \"Alive\" ? \"👍\" : \"👎\";\r\n      return <span aria-label=\"Dead or Alive\">{isAlive}</span>;\r\n    } else {\r\n      return <span>{props.status}</span>;\r\n    }\r\n  };\r\n\r\n  const renderSpecies = () => {\r\n    const isHuman = props.species === \"Human\" ? \"👤\" : \"👽\";\r\n    return <span aria-label=\"Human or Alien\">{isHuman}</span>;\r\n  };\r\n\r\n  return (\r\n    <section className=\"modal\">\r\n      <article className=\"modal__content\">\r\n        <div className=\"modal__content__title\">\r\n          <h2>{props.name}</h2>\r\n        </div>\r\n        <Link to=\"/\">\r\n          <span className=\"modal__content__icon\">\r\n            <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </Link>\r\n\r\n        <div className=\"modal__content__main\">\r\n          <div className=\"modal__content__main__image\">\r\n            <img src={props.image} alt={`Foto de ${props.name}`} />\r\n          </div>\r\n          <div className=\"modal__content__main__properties\">\r\n            <ul>\r\n              <li>\r\n                <span>Estado: </span>\r\n                {renderStatus()}\r\n              </li>\r\n              <li>\r\n                <span>Especie: </span>\r\n                {renderSpecies()}\r\n              </li>\r\n              <li>\r\n                <span>Origen: </span>\r\n                {props.origin}\r\n              </li>\r\n              <li>\r\n                <span>Nº de episodios: </span>\r\n                {props.episodes}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport getDataFromApi from \"../services/Api\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Filter from \"./Filter\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\n\r\nimport \"../stylesheets/App.scss\";\r\n\r\nconst App = () => {\r\n  // set states\r\n  const [characterStore, setCharacterStore] = useState([]);\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  // change character storage when value of nameFilter is changed.\r\n  useEffect(() => {\r\n    getDataFromApi().then((data) => {\r\n      setCharacterStore(data);\r\n    });\r\n  }, [nameFilter]);\r\n\r\n  // set new value for nameFilter which comes from input value (props.value)\r\n  const handleChangeInput = (props) => {\r\n    setNameFilter(props.value);\r\n  };\r\n\r\n  // filter data by name character using nameFilter in capital or lower case letters\r\n  const filteredCharacterStore = () => {\r\n    return characterStore.filter((character) => {\r\n      return character.name.toUpperCase().includes(nameFilter.toUpperCase());\r\n    });\r\n  };\r\n\r\n  const renderCharacterDetail = (props) => {\r\n    const routeCharacterId = props.match.params.characterId;\r\n    const character = characterStore.find(\r\n      (character) => character.id === routeCharacterId\r\n    );\r\n    if (character) {\r\n      return (\r\n        <CharacterDetail\r\n          name={character.name}\r\n          status={character.status}\r\n          species={character.species}\r\n          origin={character.origin}\r\n          episodes={character.episodes}\r\n          image={character.image}\r\n          id={character.id}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"error-message\">\r\n          <p>Personaje no encontrado</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <main className=\"main\">\r\n        <Route exact path=\"/\">\r\n          <Filter\r\n            handleChangeInput={handleChangeInput}\r\n            nameFilter={nameFilter}\r\n          />\r\n          <CharacterList\r\n            characterStore={filteredCharacterStore()}\r\n            nameFilter={nameFilter}\r\n          />\r\n        </Route>\r\n        <Switch>\r\n          <Route\r\n            path=\"/character/:characterId\"\r\n            render={renderCharacterDetail}\r\n          />\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}